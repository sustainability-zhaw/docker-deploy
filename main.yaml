- name: setup edge proxy service with SDG
  #Â speed things up
  gather_facts: false
  hosts: mainnode

  tasks:
  - name: load packages from config
    include_vars:
      file: /configs/configs.yaml
      name: sdg_config

  - name: load container sha from config
    include_vars:
      file: /configs/containers.yaml
      name: cicd

  # Setup External Networks
  # https://docs.ansible.com/ansible/latest/collections/community/docker/docker_network_module.html

  - name: setup caddyadmin network
    docker_network:
      name: "{{ item }}"
      attachable: true
      internal: false
      driver: overlay
      driver_options: 
        encrypted: ""
      state: present
    with_items: "{{ sdg_config.networks }}"

  # Setup Configs
  # https://docs.ansible.com/ansible/latest/collections/community/docker/docker_config_module.html

  - name: setup proxy configs
    register: proxyconfig
    docker_config:
      name: proxy_caddyfile
      data: "{{ lookup('file', '/configs/Caddyfile' ) }}"
      rolling_versions: true
      versions_to_keep: 2
      state: present
   
  - name: setup authomator configs
    register: authoconfig
    docker_secret:
      name: autho_config
      data: "{{ lookup('file', '/configs/services/authomator/authomator_config.yaml' ) }}"
      rolling_versions: true
      versions_to_keep: 2
      state: present

  - name: setup authomator dev configs
    register: authoconfig_dev
    docker_secret:
      name: autho_config_dev
      data: "{{ lookup('file', '/configs/services/authomator/authomator_config_dev.yaml' ) }}"
      rolling_versions: true
      versions_to_keep: 2
      state: present

  - name: setup authomator keys
    register: authokeys
    docker_secret:
      name: autho_keys
      data: "{{ lookup('file', '/configs/services/authomator/keys.jwks' ) }}"
      rolling_versions: true
      versions_to_keep: 2
      state: present

  - name: setup authomator dev keys
    register: authokeys_dev
    docker_secret:
      name: autho_keys_dev
      data: "{{ lookup('file', '/configs/services/authomator/keys_dev.jwks' ) }}"
      rolling_versions: true
      versions_to_keep: 2
      state: present

  - name: setup ad-resolver configs
    register: adresolver_config
    docker_secret:
      name: adresolver_config
      data: "{{ lookup('file', '/configs/services/ad_resolver/ad_resolver.json' ) | from_json | to_json }}"
      rolling_versions: true
      versions_to_keep: 2
      state: present

  - name: setup dspace_extractor config for digital collection
    register: dspace_extractor_config
    docker_secret:
      name: dspace_extractor_config
      data: "{{ lookup('file', '/configs/services/extractor/digital_collection.json' ) | from_json | to_json }}"
      rolling_versions: true
      versions_to_keep: 2
      state: present

  - name: setup dashboard configs
    register: sdgwebconfig
    docker_config:
      name: sdgweb_config
      data: "{{ lookup('file', '/configs/dashboard_config.json' ) | from_json | to_json }}"
      rolling_versions: true
      versions_to_keep: 2
      state: present

  - name: setup sdg indexer configs
    register: sdgindexer_config
    docker_config:
      name: sdgindexer_config
      data: "{{ lookup('file', '/configs/services/indexer/config.json' ) | from_json | to_json }}"
      rolling_versions: true
      versions_to_keep: 2
      state: present

  - name: setup keyword webhook configs
    register: webhookconfig
    docker_secret:
      name: webhook_config
      data: "{{ lookup('file', '/configs/services/webhook/config.json' ) | from_json | to_json }}"
      rolling_versions: true
      versions_to_keep: 2
      state: present

  - name: setup graphiql
    register: graphiql
    docker_config:
      name: tool_graphiql
      data: "{{ lookup('file', '/configs/graphiql/index.html' ) }}"
      rolling_versions: true
      versions_to_keep: 2
      state: present

  # Deploy the content Services
  
  - name: deploy message queue
    docker_stack:
      name: mq
      state: present
      prune: true
      compose: 
      - "{{ lookup('file', './services/stack-rabbitmq.yaml' ) | from_yaml }}"

  - name: deploy dgraph
    environment:
      HOST_CONSTRAINT: "{{ sdg_config.dgraph.constraints.host }}"
      DB_INIT: "{{ cicd.containers.schema_sha }}"
    docker_stack:
      name: dgraph
      state: present
      prune: true
      compose: 
      - "{{ lookup('file', './services/stack-dgraph_standalone.yaml' ) | from_yaml }}"
  
  - name: infuse SDG Keywords from GH 
    environment:
      CONFIGNAME: "{{ webhookconfig.secret_name }}"
      IMAGETAG: "sha-{{ cicd.containers.keywords }}"
    docker_stack:
      name: sdgidx
      state: present
      # Prune means that only services in the stack definition are present. Older services will be automatically removed.
      prune: true
      compose: 
      - "{{ lookup('file', './services/stack-infusion_keywords.yaml' ) | from_yaml }}"

  - name: deploy sdg frontend stack from file
    environment:
      CONFIGNAME: "{{ sdgwebconfig.config_name }}"
      IMAGETAG: "sha-{{ cicd.containers.dashboard_sha }}"
    docker_stack:
      name: sdgfrontend
      state: present
      # Prune means that only services in the stack definition are present. Older services will be automatically removed.
      prune: true
      compose: 
      - "{{ lookup('file', './services/stack-sdgfrontend.yaml' ) | from_yaml }}"

  - name: deploy digital collection extractor
    environment:
      CONFIGNAME: "{{ dspace_extractor_config.secret_name }}"
      IMAGETAG: "sha-{{ cicd.containers.dspace_sha }}"
    docker_stack:
      name: digital_collection
      state: present
      # Prune means that only services in the stack definition are present. Older services will be automatically removed.
      prune: true
      compose: 
      - "{{ lookup('file', './services/stack-extraction-dspace.yaml' ) | from_yaml }}"

  # Deploy the authentication Service
  - name: deploy authomator middleware stack from file
    # The environment variable tells docker_stack any changed CONFIGNAME
    environment:
      CONFIGNAME: "{{ authoconfig.secret_name }}"
      KEYSNAME: "{{ authokeys.secret_name }}"
      IMAGETAG: "sha-{{ cicd.containers.authomator_sha }}"
    docker_stack:
      name: autho
      state: present
      prune: true
      compose: 
      - "{{ lookup('file', './services/stack-authomator.yaml' ) | from_yaml }}"

  - name: deploy authomator dev middleware stack from file
    # The environment variable tells docker_stack any changed CONFIGNAME
    environment:
      CONFIGNAME: "{{ authoconfig_dev.secret_name }}"
      KEYSNAME: "{{ authokeys_dev.secret_name }}"
      IMAGETAG: "sha-{{ cicd.containers.authomator_dev }}"
    docker_stack:
      name: authodev
      state: present
      prune: true
      # NOTE the dev and prod services use the same compose file for deployment!
      compose: 
      - "{{ lookup('file', './services/stack-authomator.yaml' ) | from_yaml }}"

  - name: deploy ad-resolver services
    environment:
      CONFIGNAME: "{{ adresolver_config.secret_name }}"
      IMAGETAG: "sha-{{ cicd.containers.adresolver_sha }}"
    docker_stack:
      name: activedirectory
      state: present
      prune: true
      compose: 
      - "{{ lookup('file', './services/stack-ad-resolver.yaml' ) | from_yaml }}"

  - name: deploy sdg indexing service
    environment:
      CONFIGNAME: "{{ sdgindexer_config.config_name }}"
      IMAGETAG: "sha-{{ cicd.containers.sdgindexer }}"
    docker_stack:
      name: sdg
      state: present
      prune: true
      compose: 
      - "{{ lookup('file', './services/stack-sdg-indexer.yaml' ) | from_yaml }}"

  - name: deploy graphiql service
    environment:
      CONFIGNAME: "{{ graphiql.config_name }}"
    docker_stack:
      name: gql
      state: present
      prune: true
      compose: 
      - "{{ lookup('file', './services/stack-gql-helper.yaml' ) | from_yaml }}"

  # Deploy the main Service
  - name: deploy reverse proxy stack from file
    # The environment variable tells docker_stack any changed CONFIGNAME
    # 
    environment:
      CONFIGNAME: "{{ proxyconfig.config_name }}"
    docker_stack:
      name: web
      state: present
      # Prune means that only services in the stack definition are present. Older services will be automatically removed.
      prune: true
      compose: 
      - "{{ lookup('file', './services/stack-reverse-proxy.yaml' ) | from_yaml }}"
