- name: setup edge proxy service with SDG
  #Â speed things up
  gather_facts: false
  hosts: mainnode

  tasks:
  - name: load packages from config
    include_vars:
      file: /configs/configs.yaml
      name: sdg_config

  - name: load container sha from config
    include_vars:
      file: /configs/containers.yaml
      name: cicd

  # Setup External Networks
  # https://docs.ansible.com/ansible/latest/collections/community/docker/docker_network_module.html

  - name: setup caddyadmin network
    docker_network:
      name: "{{ item }}"
      attachable: true
      internal: false
      driver: overlay
      driver_options: 
        encrypted: ""
      state: present
    with_items: "{{ sdg_config.networks }}"

  # Setup Configs
  # https://docs.ansible.com/ansible/latest/collections/community/docker/docker_config_module.html

  - name: setup proxy configs
    register: proxyconfig
    docker_config:
      name: proxy_caddyfile
      data: "{{ lookup('file', '/configs/Caddyfile' ) }}"
      rolling_versions: true
      versions_to_keep: 2
      state: present

  - name: setup authomator secrets
    register: authoconfig
    docker_secret:
      name: autho_config
      data: "{{ lookup('file', '/configs/services/authomator/authomator_config.yaml' ) }}"
      rolling_versions: true
      versions_to_keep: 2
      state: present

  - name: setup authomator dev secrets
    register: authoconfig_dev
    docker_secret:
      name: autho_config_dev
      data: "{{ lookup('file', '/configs/services/authomator/authomator_config_dev.yaml' ) }}"
      rolling_versions: true
      versions_to_keep: 2
      state: present

  - name: setup authomator keys
    register: authokeys
    docker_secret:
      name: autho_keys
      data: "{{ lookup('file', '/configs/services/authomator/keys.jwks' ) | from_json | to_json }}"
      rolling_versions: true
      versions_to_keep: 2
      state: present

  - name: setup authomator dev keys
    register: authokeys_dev
    docker_secret:
      name: autho_keys_dev
      data: "{{ lookup('file', '/configs/services/authomator/keys_dev.jwks' ) | from_json | to_json }}"
      rolling_versions: true
      versions_to_keep: 2
      state: present

  - name: setup ad-resolver secrets
    register: adresolver_config
    docker_secret:
      name: adresolver_config
      data: "{{ lookup('file', '/configs/services/ad_resolver/ad_resolver.json' ) | from_json | to_json }}"
      rolling_versions: true
      versions_to_keep: 2
      state: present

  - name: setup dspace_extractor secrets for digital collection
    register: dspace_extractor_config
    docker_secret:
      name: dspace_extractor_config
      data: "{{ lookup('file', '/configs/services/extractor/digital_collection.json' ) | from_json | to_json }}"
      rolling_versions: true
      versions_to_keep: 2
      state: present

  - name: setup secrets for the project db
    register: projects_extractor_config
    docker_secret:
      name: projects_extractor_config
      data: "{{ lookup('file', '/configs/services/extractor/projects.json' ) | from_json | to_json }}"
      rolling_versions: true
      versions_to_keep: 2
      state: present

  - name: setup keyword webhook secrets
    register: webhookconfig
    docker_secret:
      name: webhook_config
      data: "{{ lookup('file', '/configs/services/webhook/config.json' ) | from_json | to_json }}"
      rolling_versions: true
      versions_to_keep: 2
      state: present

  - name: setup dashboard configs
    register: dashboardconfig
    docker_config:
      name: sdgweb_config
      data: "{{ lookup('file', '/configs/dashboard_config.json' ) | from_json | to_json }}"
      rolling_versions: true
      versions_to_keep: 2
      state: present

  - name: setup sdg indexer configs
    register: sdgindexer_config
    docker_config:
      name: sdgindexer_config
      data: "{{ lookup('file', '/configs/services/indexer/config.json' ) | from_json | to_json }}"
      rolling_versions: true
      versions_to_keep: 2
      state: present

  - name: setup download gateway configs
    register: download_gateway_config
    docker_config:
      name: download_gateway
      data: "{{ lookup('file', '/configs/services/download_gateway/config.yaml' ) }}"
      rolling_versions: true
      versions_to_keep: 2
      state: present

  - name: setup graphiql
    register: graphiql
    docker_config:
      name: tool_graphiql
      data: "{{ lookup('file', '/configs/graphiql/index.html' ) }}"
      rolling_versions: true
      versions_to_keep: 2
      state: present

  # Deploy the content Services
  - name: deploy the DB stack
    environment:
      # Network names
      STACK_NETWORK: sdgservices
      # Image tags
      DBINIT_SHA: "sha-{{ cicd.containers.schema_sha }}"
      # Constraints
      DBHOST_CONSTRAINT: "{{ sdg_config.dgraph.constraints.host }}"
      # Configs & Secrets
    docker_stack:
      name: dgraph
      state: present
      # state: absent # uninstall the stack
      prune: true
      compose: 
      - "{{ lookup('file', './services/dgraph.yaml' ) | from_yaml }}"

  ##
  # wait a few moments for the db to come up, if it changed

  # deploy the rest of the stack
  - name: deploy the service stack
    environment:
      # Network names
      STACK_NETWORK: sdgservices
  
      # Image tags
      DLGW_SHA: "sha-{{ cicd.containers.dlgateway }}"
      IMPORT_AD_SHA: "sha-{{ cicd.containers.adresolver_sha }}"
      KWWEBHOOK_SHA: "sha-{{ cicd.containers.keywords }}"
      DASHBOARD_SHA: "sha-{{ cicd.containers.dashboard_sha }}"
      IMPORT_DC_SHA: "sha-{{ cicd.containers.dspace_sha }}"
      IMPORT_PR_SHA: "sha-{{ cicd.containers.projects_sha }}"
      AUTHOMATOR_SHA: "sha-{{ cicd.containers.authomator_sha }}"
      # DBINIT_SHA: "{{ cicd.containers.schema_sha }}"
      INDEXER_SHA: "sha-{{ cicd.containers.sdgindexer }}"
  
      # Configs
      DASHBOARD_CONFIG: "{{ dashboardconfig.config_name }}"
      INDEXER_CONFIG: "{{ sdgindexer_config.config_name }}"
      DLGW_CONFIG: "{{ download_gateway_config.config_name }}"
      GRAPHIQL_INDEX: "{{ graphiql.config_name }}"
      PROXY_CONFIG: "{{ proxyconfig.config_name }}"
  
      # Secrets
      ADRESOLVER_CONFIG: "{{ adresolver_config.secret_name }}"
      IMPORTER_KW_CONFIG: "{{ webhookconfig.secret_name }}"
      IMPORTER_DC_CONFIG: "{{ dspace_extractor_config.secret_name }}"
      IMPORTER_PR_CONFIG: "{{ projects_extractor_config.secret_name }}"
      AUTHO_CONFIG: "{{ authoconfig.secret_name }}"
      AUTHOKEYS: "{{ authokeys.secret_name }}"
      
    docker_stack:
      name: sdg
      state: present
      # state: absent # uninstall the stack
      prune: true
      compose: 
      - "{{ lookup('file', './services/fullstack.yaml' ) | from_yaml }}"
